import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, n as noop } from './client.ae4ec28f.js';

/* src/routes/index.svelte generated by Svelte v3.31.2 */

const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let section0;
	let div3;
	let div1;
	let h1;
	let t1;
	let br;
	let t2;
	let t3;
	let p0;
	let t4;
	let t5;
	let div0;
	let button0;
	let t6;
	let t7;
	let button1;
	let t8;
	let t9;
	let div2;
	let img0;
	let img0_src_value;
	let t10;
	let section1;
	let div11;
	let div10;
	let div5;
	let div4;
	let img1;
	let img1_src_value;
	let t11;
	let p1;
	let t12;
	let t13;
	let span0;
	let t14;
	let h20;
	let t15;
	let t16;
	let p2;
	let t17;
	let t18;
	let div7;
	let div6;
	let img2;
	let img2_src_value;
	let t19;
	let p3;
	let t20;
	let t21;
	let span1;
	let t22;
	let h21;
	let t23;
	let t24;
	let p4;
	let t25;
	let t26;
	let div9;
	let div8;
	let img3;
	let img3_src_value;
	let t27;
	let p5;
	let t28;
	let t29;
	let span2;
	let t30;
	let h22;
	let t31;
	let t32;
	let p6;
	let t33;

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			div3 = element("div");
			div1 = element("div");
			h1 = element("h1");
			t1 = text("Before they sold out\n        ");
			br = element("br");
			t2 = text("readymade gluten");
			t3 = space();
			p0 = element("p");
			t4 = text("Copper mug try-hard pitchfork pour-over freegan heirloom neutra air plant cold-pressed tacos poke beard tote bag. Heirloom echo park mlkshk tote bag selvage hot chicken authentic tumeric truffaut hexagon try-hard chambray.");
			t5 = space();
			div0 = element("div");
			button0 = element("button");
			t6 = text("Button");
			t7 = space();
			button1 = element("button");
			t8 = text("Button");
			t9 = space();
			div2 = element("div");
			img0 = element("img");
			t10 = space();
			section1 = element("section");
			div11 = element("div");
			div10 = element("div");
			div5 = element("div");
			div4 = element("div");
			img1 = element("img");
			t11 = space();
			p1 = element("p");
			t12 = text("Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			t13 = space();
			span0 = element("span");
			t14 = space();
			h20 = element("h2");
			t15 = text("HOLDEN CAULFIELD");
			t16 = space();
			p2 = element("p");
			t17 = text("Senior Product Designer");
			t18 = space();
			div7 = element("div");
			div6 = element("div");
			img2 = element("img");
			t19 = space();
			p3 = element("p");
			t20 = text("Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			t21 = space();
			span1 = element("span");
			t22 = space();
			h21 = element("h2");
			t23 = text("ALPER KAMU");
			t24 = space();
			p4 = element("p");
			t25 = text("UI Develeoper");
			t26 = space();
			div9 = element("div");
			div8 = element("div");
			img3 = element("img");
			t27 = space();
			p5 = element("p");
			t28 = text("Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			t29 = space();
			span2 = element("span");
			t30 = space();
			h22 = element("h2");
			t31 = text("HENRY LETHAM");
			t32 = space();
			p6 = element("p");
			t33 = text("CTO");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-oh6yg0\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div3 = claim_element(section0_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Before they sold out\n        ");
			br = claim_element(h1_nodes, "BR", { class: true });
			t2 = claim_text(h1_nodes, "readymade gluten");
			h1_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			p0 = claim_element(div1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "Copper mug try-hard pitchfork pour-over freegan heirloom neutra air plant cold-pressed tacos poke beard tote bag. Heirloom echo park mlkshk tote bag selvage hot chicken authentic tumeric truffaut hexagon try-hard chambray.");
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			button0 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t6 = claim_text(button0_nodes, "Button");
			button0_nodes.forEach(detach_dev);
			t7 = claim_space(div0_nodes);
			button1 = claim_element(div0_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t8 = claim_text(button1_nodes, "Button");
			button1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img0 = claim_element(div2_nodes, "IMG", { class: true, alt: true, src: true });
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t10 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div11 = claim_element(section1_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div5 = claim_element(div10_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img1 = claim_element(div4_nodes, "IMG", { alt: true, class: true, src: true });
			t11 = claim_space(div4_nodes);
			p1 = claim_element(div4_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t12 = claim_text(p1_nodes, "Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			p1_nodes.forEach(detach_dev);
			t13 = claim_space(div4_nodes);
			span0 = claim_element(div4_nodes, "SPAN", { class: true });
			children(span0).forEach(detach_dev);
			t14 = claim_space(div4_nodes);
			h20 = claim_element(div4_nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t15 = claim_text(h20_nodes, "HOLDEN CAULFIELD");
			h20_nodes.forEach(detach_dev);
			t16 = claim_space(div4_nodes);
			p2 = claim_element(div4_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t17 = claim_text(p2_nodes, "Senior Product Designer");
			p2_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t18 = claim_space(div10_nodes);
			div7 = claim_element(div10_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			img2 = claim_element(div6_nodes, "IMG", { alt: true, class: true, src: true });
			t19 = claim_space(div6_nodes);
			p3 = claim_element(div6_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t20 = claim_text(p3_nodes, "Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			p3_nodes.forEach(detach_dev);
			t21 = claim_space(div6_nodes);
			span1 = claim_element(div6_nodes, "SPAN", { class: true });
			children(span1).forEach(detach_dev);
			t22 = claim_space(div6_nodes);
			h21 = claim_element(div6_nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t23 = claim_text(h21_nodes, "ALPER KAMU");
			h21_nodes.forEach(detach_dev);
			t24 = claim_space(div6_nodes);
			p4 = claim_element(div6_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t25 = claim_text(p4_nodes, "UI Develeoper");
			p4_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t26 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			img3 = claim_element(div8_nodes, "IMG", { alt: true, class: true, src: true });
			t27 = claim_space(div8_nodes);
			p5 = claim_element(div8_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t28 = claim_text(p5_nodes, "Edison bulb retro cloud bread echo park, helvetica stumptown taiyaki taxidermy 90's cronut +1 kinfolk. Single-origin coffee ennui shaman taiyaki vape DIY tote bag drinking vinegar cronut adaptogen squid fanny pack vaporware.");
			p5_nodes.forEach(detach_dev);
			t29 = claim_space(div8_nodes);
			span2 = claim_element(div8_nodes, "SPAN", { class: true });
			children(span2).forEach(detach_dev);
			t30 = claim_space(div8_nodes);
			h22 = claim_element(div8_nodes, "H2", { class: true });
			var h22_nodes = children(h22);
			t31 = claim_text(h22_nodes, "HENRY LETHAM");
			h22_nodes.forEach(detach_dev);
			t32 = claim_space(div8_nodes);
			p6 = claim_element(div8_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t33 = claim_text(p6_nodes, "CTO");
			p6_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Sapper project template";
			attr_dev(br, "class", "hidden lg:inline-block");
			add_location(br, file, 10, 8, 456);
			attr_dev(h1, "class", "title-font sm:text-4xl text-3xl mb-4 font-medium text-white");
			add_location(h1, file, 9, 6, 355);
			attr_dev(p0, "class", "mb-8 leading-relaxed");
			add_location(p0, file, 12, 6, 526);
			attr_dev(button0, "class", "inline-flex text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded text-lg");
			add_location(button0, file, 14, 8, 833);
			attr_dev(button1, "class", "ml-4 inline-flex text-gray-400 bg-gray-800 border-0 py-2 px-6 focus:outline-none hover:bg-gray-700 hover:text-white rounded text-lg");
			add_location(button1, file, 15, 8, 978);
			attr_dev(div0, "class", "flex justify-center");
			add_location(div0, file, 13, 6, 791);
			attr_dev(div1, "class", "lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center");
			add_location(div1, file, 8, 4, 214);
			attr_dev(img0, "class", "object-cover object-center rounded");
			attr_dev(img0, "alt", "hero");
			if (img0.src !== (img0_src_value = "https://dummyimage.com/720x600")) attr_dev(img0, "src", img0_src_value);
			add_location(img0, file, 19, 6, 1227);
			attr_dev(div2, "class", "lg:max-w-lg lg:w-full md:w-1/2 w-5/6");
			add_location(div2, file, 18, 4, 1170);
			attr_dev(div3, "class", "container mx-auto flex px-5 py-24 md:flex-row flex-col items-center");
			add_location(div3, file, 7, 2, 128);
			attr_dev(section0, "class", "text-gray-400 bg-gray-900 body-font");
			add_location(section0, file, 6, 0, 72);
			attr_dev(img1, "alt", "testimonial");
			attr_dev(img1, "class", "w-20 h-20 mb-8 object-cover object-center rounded-full inline-block border-2 border-gray-800 bg-gray-800 bg-opacity-10");
			if (img1.src !== (img1_src_value = "https://dummyimage.com/302x302")) attr_dev(img1, "src", img1_src_value);
			add_location(img1, file, 30, 10, 1591);
			attr_dev(p1, "class", "leading-relaxed");
			add_location(p1, file, 31, 10, 1789);
			attr_dev(span0, "class", "inline-block h-1 w-10 rounded bg-red-500 mt-6 mb-4");
			add_location(span0, file, 32, 10, 2055);
			attr_dev(h20, "class", "text-white font-medium title-font tracking-wider text-sm");
			add_location(h20, file, 33, 10, 2138);
			attr_dev(p2, "class", "text-gray-500");
			add_location(p2, file, 34, 10, 2239);
			attr_dev(div4, "class", "h-full text-center");
			add_location(div4, file, 29, 8, 1548);
			attr_dev(div5, "class", "lg:w-1/3 lg:mb-0 mb-6 p-4");
			add_location(div5, file, 28, 6, 1500);
			attr_dev(img2, "alt", "testimonial");
			attr_dev(img2, "class", "w-20 h-20 mb-8 object-cover object-center rounded-full inline-block border-2 border-gray-800 bg-gray-800 bg-opacity-10");
			if (img2.src !== (img2_src_value = "https://dummyimage.com/300x300")) attr_dev(img2, "src", img2_src_value);
			add_location(img2, file, 39, 10, 2417);
			attr_dev(p3, "class", "leading-relaxed");
			add_location(p3, file, 40, 10, 2615);
			attr_dev(span1, "class", "inline-block h-1 w-10 rounded bg-red-500 mt-6 mb-4");
			add_location(span1, file, 41, 10, 2881);
			attr_dev(h21, "class", "text-white font-medium title-font tracking-wider text-sm");
			add_location(h21, file, 42, 10, 2964);
			attr_dev(p4, "class", "text-gray-500");
			add_location(p4, file, 43, 10, 3059);
			attr_dev(div6, "class", "h-full text-center");
			add_location(div6, file, 38, 8, 2374);
			attr_dev(div7, "class", "lg:w-1/3 lg:mb-0 mb-6 p-4");
			add_location(div7, file, 37, 6, 2326);
			attr_dev(img3, "alt", "testimonial");
			attr_dev(img3, "class", "w-20 h-20 mb-8 object-cover object-center rounded-full inline-block border-2 border-gray-800 bg-gray-800 bg-opacity-10");
			if (img3.src !== (img3_src_value = "https://dummyimage.com/305x305")) attr_dev(img3, "src", img3_src_value);
			add_location(img3, file, 48, 10, 3222);
			attr_dev(p5, "class", "leading-relaxed");
			add_location(p5, file, 49, 10, 3420);
			attr_dev(span2, "class", "inline-block h-1 w-10 rounded bg-red-500 mt-6 mb-4");
			add_location(span2, file, 50, 10, 3686);
			attr_dev(h22, "class", "text-white font-medium title-font tracking-wider text-sm");
			add_location(h22, file, 51, 10, 3769);
			attr_dev(p6, "class", "text-gray-500");
			add_location(p6, file, 52, 10, 3866);
			attr_dev(div8, "class", "h-full text-center");
			add_location(div8, file, 47, 8, 3179);
			attr_dev(div9, "class", "lg:w-1/3 lg:mb-0 p-4");
			add_location(div9, file, 46, 6, 3136);
			attr_dev(div10, "class", "flex flex-wrap -m-4");
			add_location(div10, file, 27, 4, 1460);
			attr_dev(div11, "class", "container px-5 py-24 mx-auto");
			add_location(div11, file, 26, 2, 1413);
			attr_dev(section1, "class", "text-gray-400 bg-gray-900 body-font");
			add_location(section1, file, 25, 0, 1357);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, div3);
			append_dev(div3, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(h1, br);
			append_dev(h1, t2);
			append_dev(div1, t3);
			append_dev(div1, p0);
			append_dev(p0, t4);
			append_dev(div1, t5);
			append_dev(div1, div0);
			append_dev(div0, button0);
			append_dev(button0, t6);
			append_dev(div0, t7);
			append_dev(div0, button1);
			append_dev(button1, t8);
			append_dev(div3, t9);
			append_dev(div3, div2);
			append_dev(div2, img0);
			insert_dev(target, t10, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div11);
			append_dev(div11, div10);
			append_dev(div10, div5);
			append_dev(div5, div4);
			append_dev(div4, img1);
			append_dev(div4, t11);
			append_dev(div4, p1);
			append_dev(p1, t12);
			append_dev(div4, t13);
			append_dev(div4, span0);
			append_dev(div4, t14);
			append_dev(div4, h20);
			append_dev(h20, t15);
			append_dev(div4, t16);
			append_dev(div4, p2);
			append_dev(p2, t17);
			append_dev(div10, t18);
			append_dev(div10, div7);
			append_dev(div7, div6);
			append_dev(div6, img2);
			append_dev(div6, t19);
			append_dev(div6, p3);
			append_dev(p3, t20);
			append_dev(div6, t21);
			append_dev(div6, span1);
			append_dev(div6, t22);
			append_dev(div6, h21);
			append_dev(h21, t23);
			append_dev(div6, t24);
			append_dev(div6, p4);
			append_dev(p4, t25);
			append_dev(div10, t26);
			append_dev(div10, div9);
			append_dev(div9, div8);
			append_dev(div8, img3);
			append_dev(div8, t27);
			append_dev(div8, p5);
			append_dev(p5, t28);
			append_dev(div8, t29);
			append_dev(div8, span2);
			append_dev(div8, t30);
			append_dev(div8, h22);
			append_dev(h22, t31);
			append_dev(div8, t32);
			append_dev(div8, p6);
			append_dev(p6, t33);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(section1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZGJhOTFmMjguanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
